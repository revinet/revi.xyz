---
# yaml-language-server: $schema=https://raw.githubusercontent.com/microsoft/azure-pipelines-vscode/master/service-schema.json
# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

name: 'CI test-$(Build.DefinitionVersion)-$(Date:yyyyMMdd)-$(Rev:r)'

trigger:
  - master
  # GitHub merge Queue
  - gh-readonly-queue/**

pr:
  branches:
    # don't test PRs from dependabot or renovate
    exclude:
      - dependabot/**
      - renovate/**

pool:
  vmImage: ubuntu-latest

strategy:
  matrix:
    node_20_x:
      node_version: 20.x
    node_22_x:
      node_version: 22.x

variables:
  npm_config_cache: $(Pipeline.Workspace)/.npm

steps:
  # https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/use-node-v1?view=azure-pipelines
  - task: UseNode@1.235.1
    inputs:
      version: $(node_version)
    displayName: 'Install Node.js'
  # https://learn.microsoft.com/en-us/azure/devops/pipelines/release/caching?view=azure-devops#nodejsnpm
  - task: Cache@2
    inputs:
      key: 'npm | "$(Agent.OS)" | package-lock.json'
      restoreKeys: |
        npm | "$(Agent.OS)"
      path: $(npm_config_cache)
    displayName: 'Cache npm'
  # `npm ci` including optional because renovate.
  - script: |
      npm ci
    displayName: 'npm ci'
  # Build docusaurus for html-validate.
  - script: |
      npm run dbuild
    displayName: 'Build docusaurus'
  - script: |
      npm run p:c .
    displayName: 'Prettier check'
  - script: |
      npm run lint:eslint
      exit 0
    # ignore lint error
    displayName: 'docusaurus ESLint'
  - script: |
      npm run lint:renovate
    displayName: 'Validate Renovate config'
  - script: |
      npx html-validate "docusaurus/build/**/*.html"
    displayName: 'HTML validation'
  - script: |
      npx stylelint "docusaurus/src/**/*.css"
    displayName: 'CSS validation'
